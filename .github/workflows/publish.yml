name: Publish to PyPI

on:
  push:
    tags:
      - "v*"  # Runs when you push a version tag like "v1.0.0"
    branches:
      - develop  # Runs when you push to the given branch

jobs:
  build-and-publish:
    name: Build and publish Python package
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3
      - name: setup python
        run: sudo apt-get update && sudo apt-get install -y python3-pip
      - name: debug git status
        run: git status && cat vbi/_version.py
      - name: pip install dependencies
        run: pip install .
      # - name: run tests
      #   run: pytest -m 'not slow'
      - name: build packages
        run: python -m build
      - name: Compile C++
        run: cd vbi/models/cpp/_src && make
      - name: upload packages to pypi
        run: twine upload -u __token__ -p "${{ secrets.PYPI_API_TOKEN }}" dist/*

      # - name: Checkout repository
      #   uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: "3.10"  # Set to Python 3.10

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install build twine

      # - name: Compile C++ extension
      #   run: |
      #     cd vbi/models/cpp/_src
      #     make

      # - name: Build package inside a manylinux container
      #   run: |
      #     docker run --rm \
      #       -v $(pwd):/workspace \
      #       -w /workspace \
      #       quay.io/pypa/manylinux_2_24_x86_64 bash -c "
      #         python setup.py install
      #         python -m build
      #       "

      # - name: Publish to PyPI
      #   env:
      #     TWINE_USERNAME: __token__
      #     TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      #   run: twine upload --verbose dist/* --repository-url https://upload.pypi.org/legacy/
